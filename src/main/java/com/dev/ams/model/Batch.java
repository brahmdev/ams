package com.dev.ams.model;
// Generated Jun 5, 2019 8:13:49 AM by Hibernate Tools 3.2.2.GA


import com.fasterxml.jackson.annotation.JsonBackReference;
import com.fasterxml.jackson.annotation.JsonIdentityInfo;
import com.fasterxml.jackson.annotation.ObjectIdGenerators;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Batch generated by hbm2java
 */
@Entity
@Table(name = "batch"
)

public class Batch implements java.io.Serializable {


    private Integer id;

    private Standard standard;
    private String code;
    private String year;
    private String name;
    private Integer capacity;
    private Date created;
    private Date updated;

    @JsonBackReference(value="batch-batchtimings")
    private Set<BatchTimings> batchTimingses = new HashSet<BatchTimings>(0);

    @JsonBackReference(value="batch-chapterdetails")
    private Set<ChapterDetails> chapterDetailses = new HashSet<ChapterDetails>(0);

    @JsonBackReference(value="batch-studentdetails")
    private Set<StudentDetails> studentDetailses = new HashSet<StudentDetails>(0);

    public Batch() {
    }


    public Batch(Standard standard, String code, String year, String name, Date created) {
        this.standard = standard;
        this.code = code;
        this.year = year;
        this.name = name;
        this.created = created;
    }

    public Batch(Standard standard, String code, String year, String name, Date created, Date updated, Set<BatchTimings> batchTimingses, Set<ChapterDetails> chapterDetailses, Set<StudentDetails> studentDetailses) {
        this.standard = standard;
        this.code = code;
        this.year = year;
        this.name = name;
        this.created = created;
        this.updated = updated;
        this.batchTimingses = batchTimingses;
        this.chapterDetailses = chapterDetailses;
        this.studentDetailses = studentDetailses;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)
    @Column(name = "id", unique = true, nullable = false)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "standard_id", nullable = false)
    public Standard getStandard() {
        return this.standard;
    }

    public void setStandard(Standard standard) {
        this.standard = standard;
    }

    @Column(name = "code", nullable = false, length = 45)
    public String getCode() {
        return this.code;
    }

    public void setCode(String code) {
        this.code = code;
    }

    @Column(name = "year", nullable = false, length = 10)
    public String getYear() {
        return this.year;
    }

    public void setYear(String year) {
        this.year = year;
    }

    @Column(name = "name", nullable = false, length = 45)
    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }

    @Column(name = "capacity", nullable = false)
    public Integer getCapacity() {
        return capacity;
    }

    public void setCapacity(Integer capacity) {
        this.capacity = capacity;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "created", nullable = false, length = 19)
    public Date getCreated() {
        return this.created;
    }

    public void setCreated(Date created) {
        this.created = created;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "updated", length = 19)
    public Date getUpdated() {
        return this.updated;
    }

    public void setUpdated(Date updated) {
        this.updated = updated;
    }

    @OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "batch")
    public Set<BatchTimings> getBatchTimingses() {
        return this.batchTimingses;
    }

    public void setBatchTimingses(Set<BatchTimings> batchTimingses) {
        this.batchTimingses = batchTimingses;
    }

    @OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "batch")
    public Set<ChapterDetails> getChapterDetailses() {
        return this.chapterDetailses;
    }

    public void setChapterDetailses(Set<ChapterDetails> chapterDetailses) {
        this.chapterDetailses = chapterDetailses;
    }

    @OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "batch")
    public Set<StudentDetails> getStudentDetailses() {
        return this.studentDetailses;
    }

    public void setStudentDetailses(Set<StudentDetails> studentDetailses) {
        this.studentDetailses = studentDetailses;
    }


}


