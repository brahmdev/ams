package com.dev.ams.model;
// Generated Mar 15, 2019, 9:06:04 PM by Hibernate Tools 3.2.2.GA


import com.fasterxml.jackson.annotation.JsonBackReference;
import com.fasterxml.jackson.annotation.JsonManagedReference;

import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * StudentDetails generated by hbm2java
 */
@Entity
@Table(name = "student_details"
)
public class StudentDetails implements java.io.Serializable {


    private Integer id;

    @JsonBackReference(value = "studentDetails-user")
    private Users users;

    @JsonBackReference(value = "studentDetails-standard")
    private Standard standard;
    private Integer batchId;

    @JsonManagedReference(value = "studentDetails-attendance")
    private Set<StudentAttendance> studentAttendances = new HashSet<StudentAttendance>(0);
    private Set<ExamResult> examResults = new HashSet<ExamResult>(0);

    public StudentDetails() {
    }


    public StudentDetails(Users users, Standard standard) {
        this.users = users;
        this.standard = standard;
    }

    public StudentDetails(Users users, Standard standard, Integer batchId, Set<StudentAttendance> studentAttendances, Set<ExamResult> examResults) {
        this.users = users;
        this.standard = standard;
        this.batchId = batchId;
        this.studentAttendances = studentAttendances;
        this.examResults = examResults;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)
    @Column(name = "id", unique = true, nullable = false)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "student_name", nullable = false)
    public Users getUsers() {
        return this.users;
    }

    public void setUsers(Users users) {
        this.users = users;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "standard_id", nullable = false)
    public Standard getStandard() {
        return this.standard;
    }

    public void setStandard(Standard standard) {
        this.standard = standard;
    }

    @Column(name = "batch_id")
    public Integer getBatchId() {
        return this.batchId;
    }

    public void setBatchId(Integer batchId) {
        this.batchId = batchId;
    }

    @OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "studentDetails")
    public Set<StudentAttendance> getStudentAttendances() {
        return this.studentAttendances;
    }

    public void setStudentAttendances(Set<StudentAttendance> studentAttendances) {
        this.studentAttendances = studentAttendances;
    }

    @OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "studentDetails")
    public Set<ExamResult> getExamResults() {
        return this.examResults;
    }

    public void setExamResults(Set<ExamResult> examResults) {
        this.examResults = examResults;
    }


}


