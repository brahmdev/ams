package com.dev.ams.model;
// Generated Jun 13, 2019 7:21:37 PM by Hibernate Tools 3.2.2.GA


import com.fasterxml.jackson.annotation.JsonBackReference;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Users generated by hbm2java
 */
@Entity
@Table(name = "users"
)
public class Users implements java.io.Serializable {


    private Integer id;
    private Branch branch;
    private String username;
    private String firstname;
    private String lastname;
    private String email;
    private String mobile;
    private String phone;
    private String password;
    private String resetPasswordCode;
    private Date dob;
    private String bloodGroup;
    private byte[] photo;
    private String address;
    private String city;
    private String zip;
    private String state;
    private String country;
    private Character enabled;
    private String gender;
    private String language;
    private String avatar;
    private String signature;
    private Date created;
    private Date updated;

    private Set<EmployeeDetails> employeeDetailses = new HashSet<EmployeeDetails>(0);

    private Set<ParentDetails> parentDetailses = new HashSet<ParentDetails>(0);

    private Set<StudentDetails> studentDetailses = new HashSet<StudentDetails>(0);

    private Set<Authorities> authoritieses = new HashSet<Authorities>(0);

    public Users() {
    }


    public Users(String username, String firstname, String lastname, String mobile, String password, String address, String city, String state, String country, String gender, String avatar, String signature, Date created) {
        this.username = username;
        this.firstname = firstname;
        this.lastname = lastname;
        this.mobile = mobile;
        this.password = password;
        this.address = address;
        this.city = city;
        this.state = state;
        this.country = country;
        this.gender = gender;
        this.avatar = avatar;
        this.signature = signature;
        this.created = created;
    }

    public Users(Branch branch, String username, String firstname, String lastname, String email, String mobile, String phone, String password, String resetPasswordCode, Date dob, String bloodGroup, byte[] photo, String address, String city, String zip, String state, String country, Character enabled, String gender, String language, String avatar, String signature, Date created, Date updated, Set<EmployeeDetails> employeeDetailses, Set<ParentDetails> parentDetailses, Set<StudentDetails> studentDetailses, Set<Authorities> authoritieses) {
        this.branch = branch;
        this.username = username;
        this.firstname = firstname;
        this.lastname = lastname;
        this.email = email;
        this.mobile = mobile;
        this.phone = phone;
        this.password = password;
        this.resetPasswordCode = resetPasswordCode;
        this.dob = dob;
        this.bloodGroup = bloodGroup;
        this.photo = photo;
        this.address = address;
        this.city = city;
        this.zip = zip;
        this.state = state;
        this.country = country;
        this.enabled = enabled;
        this.gender = gender;
        this.language = language;
        this.avatar = avatar;
        this.signature = signature;
        this.created = created;
        this.updated = updated;
        this.employeeDetailses = employeeDetailses;
        this.parentDetailses = parentDetailses;
        this.studentDetailses = studentDetailses;
        this.authoritieses = authoritieses;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)

    @Column(name = "id", unique = true, nullable = false)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "branch_id")
    public Branch getBranch() {
        return this.branch;
    }

    public void setBranch(Branch branch) {
        this.branch = branch;
    }

    @Column(name = "username", nullable = false, length = 30)
    public String getUsername() {
        return this.username;
    }

    public void setUsername(String username) {
        this.username = username;
    }

    @Column(name = "firstname", nullable = false, length = 45)
    public String getFirstname() {
        return this.firstname;
    }

    public void setFirstname(String firstname) {
        this.firstname = firstname;
    }

    @Column(name = "lastname", nullable = false, length = 45)
    public String getLastname() {
        return this.lastname;
    }

    public void setLastname(String lastname) {
        this.lastname = lastname;
    }

    @Column(name = "email", length = 45)
    public String getEmail() {
        return this.email;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    @Column(name = "mobile", nullable = false, length = 45)
    public String getMobile() {
        return this.mobile;
    }

    public void setMobile(String mobile) {
        this.mobile = mobile;
    }

    @Column(name = "phone", length = 45)
    public String getPhone() {
        return this.phone;
    }

    public void setPhone(String phone) {
        this.phone = phone;
    }

    @Column(name = "password", nullable = false, length = 100)
    public String getPassword() {
        return this.password;
    }

    public void setPassword(String password) {
        this.password = password;
    }

    @Column(name = "reset_password_code", length = 45)
    public String getResetPasswordCode() {
        return this.resetPasswordCode;
    }

    public void setResetPasswordCode(String resetPasswordCode) {
        this.resetPasswordCode = resetPasswordCode;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "dob", length = 10)
    public Date getDob() {
        return this.dob;
    }

    public void setDob(Date dob) {
        this.dob = dob;
    }

    @Column(name = "blood_group", length = 10)
    public String getBloodGroup() {
        return this.bloodGroup;
    }

    public void setBloodGroup(String bloodGroup) {
        this.bloodGroup = bloodGroup;
    }

    @Column(name = "photo")
    public byte[] getPhoto() {
        return this.photo;
    }

    public void setPhoto(byte[] photo) {
        this.photo = photo;
    }

    @Column(name = "address", nullable = false, length = 150)
    public String getAddress() {
        return this.address;
    }

    public void setAddress(String address) {
        this.address = address;
    }

    @Column(name = "city", nullable = false, length = 15)
    public String getCity() {
        return this.city;
    }

    public void setCity(String city) {
        this.city = city;
    }

    @Column(name = "zip", length = 45)
    public String getZip() {
        return this.zip;
    }

    public void setZip(String zip) {
        this.zip = zip;
    }

    @Column(name = "state", nullable = false, length = 20)
    public String getState() {
        return this.state;
    }

    public void setState(String state) {
        this.state = state;
    }

    @Column(name = "country", nullable = false, length = 20)
    public String getCountry() {
        return this.country;
    }

    public void setCountry(String country) {
        this.country = country;
    }

    @Column(name = "enabled", length = 1)
    public Character getEnabled() {
        return this.enabled;
    }

    public void setEnabled(Character enabled) {
        this.enabled = enabled;
    }

    @Column(name = "gender", nullable = false, length = 10)
    public String getGender() {
        return this.gender;
    }

    public void setGender(String gender) {
        this.gender = gender;
    }

    @Column(name = "language", length = 30)
    public String getLanguage() {
        return this.language;
    }

    public void setLanguage(String language) {
        this.language = language;
    }

    @Column(name = "avatar", length = 400)
    public String getAvatar() {
        return avatar;
    }

    public void setAvatar(String avatar) {
        this.avatar = avatar;
    }

    @Column(name = "signature", length = 400)
    public String getSignature() {
        return signature;
    }

    public void setSignature(String signature) {
        this.signature = signature;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "created", nullable = false, length = 19)
    public Date getCreated() {
        return this.created;
    }

    public void setCreated(Date created) {
        this.created = created;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "updated", length = 19)
    public Date getUpdated() {
        return this.updated;
    }

    public void setUpdated(Date updated) {
        this.updated = updated;
    }

    @OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "users")
    public Set<EmployeeDetails> getEmployeeDetailses() {
        return this.employeeDetailses;
    }

    public void setEmployeeDetailses(Set<EmployeeDetails> employeeDetailses) {
        this.employeeDetailses = employeeDetailses;
    }

    @OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "users")
    public Set<ParentDetails> getParentDetailses() {
        return this.parentDetailses;
    }

    public void setParentDetailses(Set<ParentDetails> parentDetailses) {
        this.parentDetailses = parentDetailses;
    }

    @OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "users")
    public Set<StudentDetails> getStudentDetailses() {
        return this.studentDetailses;
    }

    public void setStudentDetailses(Set<StudentDetails> studentDetailses) {
        this.studentDetailses = studentDetailses;
    }

    @OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "users")
    public Set<Authorities> getAuthoritieses() {
        return this.authoritieses;
    }

    public void setAuthoritieses(Set<Authorities> authoritieses) {
        this.authoritieses = authoritieses;
    }


}

